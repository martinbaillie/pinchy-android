apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 2
        versionName "1.01"
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

    }
    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }
    }
    File propFile = file('signing.properties');
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))

        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:20+'
    compile 'com.android.support:support-v4:19.0.0'
    compile 'com.loopj.android:android-async-http:1.4.3@jar'
    compile 'com.squareup.picasso:picasso:2.2.0'

}
